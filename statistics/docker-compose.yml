version: '4.4'

services:
  neo4j:
    build: ./neo4j-docker-setup
    container_name: neo4j-apoc
    environment:
      NEO4J_AUTH: neo4j/password  # Username and password
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,algo.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*,algo.*
      NEO4J_dbms_security_procedures_whitelist: apoc.*,algo.*
      NEO4J_dbms_memory_pagecache_size: 2G
      NEO4J_dbms_memory_heap_initial__size: 4G
      NEO4J_dbms_memory_heap_max__size: 4G
      apoc.metadata.enabled: true
      apoc.export.file.enabled: "true"
      apoc.import.file.enabled: "true"
    volumes:
      - ./neo4j-docker-setup/plugins:/plugins
      - ./neo4j-docker-setup/import:/var/lib/neo4j/import
    ports:
      - 7474:7474
      - 7687:7687
      - 7473:7473
    restart: unless-stopped
    networks:
      - neo4j-network
  
  neo4j_etl:
    build:
      context: ./neo4j_etl
    env_file:
      - .env
    networks:
      - neo4j-network
    depends_on:
      - neo4j

  analytics:
    build:
      context: ./analytics
    env_file:
      - .env
    ports:
      - "8032:8032"
    networks:
      - neo4j-network
    depends_on:
      - neo4j_etl

  chat_api:
    build:
      context: ./chat_api
    depends_on:
      - analytics
    env_file:
      - .env
    ports:
      - "8031:8031"
    networks:
      - neo4j-network

  chat_bot:
    build:
      context: ./chat_bot
    depends_on:
      - chat_api
    env_file:
      - .env
    ports:
      - "8501:8501"
    networks:
      - neo4j-network


networks:
  neo4j-network:
    driver: bridge
